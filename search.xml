<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2024年终回顾</title>
      <link href="/2025/01/01/2024%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
      <url>/2025/01/01/2024%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="属于自己的GAME-LIFE"><a href="#属于自己的GAME-LIFE" class="headerlink" title="属于自己的GAME LIFE"></a>属于自己的GAME LIFE</h1><p>游戏荒的根本原因不是游戏，而是产生于自己，以往小时候自己怎么玩玩什么都能玩的进去，现在一看不缺游戏缺人也缺时间。碎片化的时间和断断续续的休息时间是一方面手游才是最终归宿，而现在不像小时候学会享受孤独。<br><a href="https://s.team/y24/mrptwcv?l=schinese"><img src="https://s21.ax1x.com/2024/12/25/pAjXRTU.png" alt="2024"></a></p><h1 id="音乐是行走路上的另一个知己"><a href="#音乐是行走路上的另一个知己" class="headerlink" title="音乐是行走路上的另一个知己"></a>音乐是行走路上的另一个知己</h1><p>随着生活的改变听的歌向也有了变化，感觉现在越来越常听的老歌，流行音乐已经逐渐淡去，从听歌的种类也已经看出了自己的心态方向变化。<br><img src="https://s21.ax1x.com/2024/12/30/pAzp6mj.jpg" alt="2024"></p>]]></content>
      
      
      <categories>
          
          <category> 年度总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2024/07/13/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
      <url>/2024/07/13/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="操作系统基础"><a href="#操作系统基础" class="headerlink" title="操作系统基础"></a>操作系统基础</h1><p>操作系统:(Operating System，简称OS)是管理和控制计算机硬件与软件资源的计算机程序，是直接运行在“裸机”上的最基本的系统软件，任何其他软件都必须在操作系统的支持下才能运行。</p><h1 id="网络通信原理"><a href="#网络通信原理" class="headerlink" title="网络通信原理"></a>网络通信原理</h1><p><img src="https://s21.ax1x.com/2024/07/13/pk4oRj1.png" alt="pk4oRj1.png"></p><h2 id="互联网的本质就是一系列的网络协议"><a href="#互联网的本质就是一系列的网络协议" class="headerlink" title="互联网的本质就是一系列的网络协议"></a>互联网的本质就是一系列的网络协议</h2><p>一台硬设有了操作系统，然后装上软件你就可以正常使用了，然而你也只能自己使用</p><p>像这样，每个人都拥有一台自己的机器，然而彼此孤立</p><p>如果中国→美国的“通信标准”是英语，中国→广东的“通信标准”是普通话，而“世界的通信标准则”都是英语。</p><div class="note primary flat"><p><strong>结论</strong>：英语成为世界上所有人通信的统一标准，如果把计算机看成分布于世界各地的人，那么连接两台计算机之间的internet实际上就是一系列统一的标准，这些标准称之为互联网协议，互联网的本质就是一系列的协议，总称为‘互联网协议’（Internet Protocol Suite).</p></div><h2 id="OSI七层协议"><a href="#OSI七层协议" class="headerlink" title="OSI七层协议"></a>OSI七层协议</h2><p>互联网协议按照功能不同分为<code>osi七层</code>或<code>tcp/ip五层</code>或<code>tcp/ip四层</code><br><img src="https://s21.ax1x.com/2024/07/13/pk4TaPe.webp" alt="pk4TaPe.webp"><br><img src="https://s21.ax1x.com/2024/07/13/pk4TN5D.webp" alt="pk4TN5D.webp"></p><h2 id="tcp-ip五层模型讲解"><a href="#tcp-ip五层模型讲解" class="headerlink" title="tcp&#x2F;ip五层模型讲解"></a>tcp&#x2F;ip五层模型讲解</h2><p>我们将应用层，表示层，会话层并作应用层，从tcp／ip五层协议的角度来阐述每层的由来与功能，搞清楚了每层的主要协议,就理解了整个互联网通信的原理。</p><p>首先，用户感知到的只是最上面一层应用层，自上而下每层都依赖于下一层，所以我们从最下一层开始切入，比较好理解</p><p>每层都运行特定的协议，越往上越靠近用户，越往下越靠近硬件</p><ul><li>物理层：基于电器特性发送高低电压(电信号)</li><li>数据链路层：定义了电信号的分组方式</li><li>网络层：引入一套新的地址用来区分不同的广播域／子网，这套地址即网络地址</li><li>传输层：建立端口到端口的通信</li><li>应用层：规定应用程序的数据格式</li></ul><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><p>物理层由来：上面提到，孤立的计算机之间要想一起玩，就必须接入internet，言外之意就是计算机之间必须完成组网</p><p>物理层功能：主要是**基于电器特性发送高低电压(电信号)**，高电压对应数字1，低电压对应数字0</p><div class="note info no-icon flat"><p>光缆、电缆、双绞线、无线电波</p></div><h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><p>数据链路层由来：单纯的电信号0和1没有任何意义，必须规定电信号多少位一组，每组什么意思</p><p>数据链路层的功能：<strong>定义了电信号的分组方式</strong></p><h4 id="以太网协议："><a href="#以太网协议：" class="headerlink" title="以太网协议："></a>以太网协议：</h4><p>早期的时候各个公司都有自己的分组方式，后来形成了统一的标准，即以太网协议<code>ethernet</code></p><p><code>ethernet</code>规定</p><ul><li>一组电信号构成一个数据包，叫做‘帧’</li><li>每一数据帧分成：报头<code>head</code>和数据<code>data</code>两部分</li></ul><table><thead><tr><th>head</th><th>data</th></tr></thead></table><p><code>head</code>包含：(固定18个字节)</p><ul><li>发送者／源地址，6个字节</li><li>接收者／目标地址，6个字节</li><li>数据类型，6个字节</li></ul><p><code>data</code>包含：(最短46字节，最长1500字节)</p><ul><li>数据包的具体内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head长度＋data长度＝数据包长度</span><br></pre></td></tr></table></figure><p>最短64字节，最长1518字节，超过最大限制就分片发送</p><h4 id="mac地址："><a href="#mac地址：" class="headerlink" title="mac地址："></a>mac地址：</h4><p>head中包含的源和目标地址由来：<code>ethernet</code>规定接入internet的设备都必须具备网卡，发送端和接收端的地址便是指网卡的地址，即<code>mac地址</code></p><p><code>mac地址</code>：每块网卡出厂时都被烧制上一个世界唯一的mac地址，长度为48位2进制，通常由12位16进制数表示（前六位是厂商编号，后六位是流水线号）</p><h4 id="广播："><a href="#广播：" class="headerlink" title="广播："></a>广播：</h4><p>有了mac地址，同一网络内的两台主机就可以通信了（一台主机通过arp协议获取另外一台主机的mac地址）</p><p><code>ethernet</code>采用最原始的方式，广播的方式进行通信，即计算机通信基本靠吼</p><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><p>网络层由来：有了ethernet、mac地址、广播的发送方式，世界上的计算机就可以彼此通信了，问题是世界范围的互联网是由</p><p>一个个彼此隔离的小的局域网组成的，那么如果所有的通信都采用以太网的广播方式，那么一台机器发送的包全世界都会收到，</p><p>这就不仅仅是效率低的问题了，这会是一种灾难</p><p>上图结论：必须找出一种方法来区分哪些计算机属于同一广播域，哪些不是，如果是就采用广播的方式发送，如果不是，</p><p>就采用<code>路由</code>的方式 （向不同广播域／子网分发数据包） ，mac地址是无法区分的，它只跟厂商有关</p><p>网络层功能：<strong>引入一套新的地址用来区分不同的广播域／子网，这套地址即网络地址</strong></p><h4 id="IP协议："><a href="#IP协议：" class="headerlink" title="IP协议："></a><strong>IP协议</strong>：</h4><p>规定网络地址的协议叫<code>ip协议</code>，它定义的地址称之为<code>ip地址</code>，广泛采用的v4版本即<code>ipv4</code>，它规定网络地址由<strong>32位2进制表示</strong></p><p>范围<code>0.0.0.0</code>-<code>255.255.255.255</code></p><p>一个ip地址通常写成四段十进制数，例：<code>172.16.10.1</code></p><p>ip地址分成两部分</p><ul><li>网络部分：标识子网</li><li>主机部分：标识主机</li></ul><div class="note warning flat"><p>注意：单纯的ip地址段只是标识了ip地址的&#x3D;&#x3D;种类&#x3D;&#x3D;，从网络部分或主机部分都无法辨识一个ip所处的子网</p></div><p>例：172.16.10.1与172.16.10.2并不能确定二者处于同一子网</p><h4 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h4><p>所谓”<code>子网掩码</code>”，就是表示子网络特征的一个参数。它在形式上等同于IP地址，也是一个32位二进制数字，它的网络部分全部为1，主机部分全部为0。比如，IP地址<code>172.16.10.1</code>，如果已知网络部分是前24位，主机部分是后8位，那么子网络掩码就是<code>11111111.11111111.11111111.00000000</code>，写成十进制就是<code>255.255.255.0</code>。</p><p>知道”<code>子网掩码</code>”，我们就能判断，任意两个IP地址是否处在同一个子网络。方法是将两个IP地址与子网掩码分别进行AND运算（两个数位都为1，运算结果为1，否则为0），然后比较结果是否相同，如果是的话，就表明它们在同一个子网络中，否则就不是。</p><p>比如，已知IP地址<code>172.16.10.1</code>和<code>172.16.10.2</code>的子网掩码都是255.255.255.0，请问它们是否在同一个子网络？两者与子网掩码分别进行AND运算，</p><div class="note info no-icon flat"><p><code>172.16.10.1</code>：<code>10101100.00010000.00001010.000000001</code><br><code>255255.255.255.0</code>:<code>11111111.11111111.11111111.00000000</code><br>AND运算得网络地址结果：<code>10101100.00010000.00001010.000000001</code>-&gt;<code>172.16.10.0</code><br><code>172.16.10.2</code>：<code>10101100.00010000.00001010.000000010</code><br><code>255255.255.255.0</code>:<code>11111111.11111111.11111111.00000000</code><br>AND运算得网络地址结果：<code>10101100.00010000.00001010.000000001</code>-&gt;<code>172.16.10.0</code></p><p>结果都是<code>172.16.10.0</code>，因此它们在同一个子网络。</p><p>总结一下，IP协议的作用主要有两个</p><ul><li><strong>为每一台计算机分配IP地址</strong></li><li><strong>确定哪些地址在同一个子网络</strong>。</li></ul></div><h4 id="ip数据包"><a href="#ip数据包" class="headerlink" title="ip数据包"></a>ip数据包</h4><p>ip数据包也分为head和data部分，无须为ip包定义单独的栏位，直接放入以太网包的data部分</p><p>head：长度为20到60字节</p><p>data：最长为65,515字节。</p><p>而以太网数据包的”数据”部分，最长只有1500字节。因此，如果IP数据包超过了1500字节，它就需要分割成几个以太网数据包，分开发送了。</p><table><thead><tr><th>以太网头</th><th>ip 头</th><th>ip数据</th></tr></thead></table><h4 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h4><p><code>arp协议</code>由来：计算机通信基本靠吼，即广播的方式，所有上层的包到最后都要封装上<code>以太网头</code>，然后通过以太网协议发送，在谈及以太网协议时候，我门了解到</p><div class="note info no-icon flat"><p>通信是基于mac的广播方式实现，计算机在发包时，获取自身的mac是容易的，如何获取目标主机的mac，就需要通过arp协议</p></div><p>arp协议功能：<strong>广播的方式发送数据包，获取目标主机的mac地址</strong></p><p>协议工作方式：每台主机ip都是已知的</p><div class="note info no-icon flat"><p>例如：主机172.16.10.10&#x2F;24访问172.16.10.11&#x2F;24</p></div><p>一：首先通过<code>ip地址</code>和<code>子网掩码</code>区分出自己所处的子网</p><table><thead><tr><th>场景</th><th>数据包地址</th></tr></thead><tbody><tr><td>同一子网</td><td>目标主机mac，目标主机ip</td></tr><tr><td>不同子网</td><td>网关mac，目标主机ip</td></tr></tbody></table><p>二：分析172.16.10.10&#x2F;24与172.16.10.11&#x2F;24处于同一网络(如果不是同一网络，那么下表中目标ip为172.16.10.1,通过arp获取的是网关的mac)</p><table><thead><tr><th></th><th>源mac</th><th>目标mac</th><th>源ip</th><th>目标ip</th><th>数据部分</th></tr></thead><tbody><tr><td>发送端主机</td><td>发送端mac</td><td>FF:FF:FF:FF:FF:FF</td><td>172.16.10.10&#x2F;24</td><td>172.16.10.11&#x2F;24</td><td>数据</td></tr></tbody></table><p>三：这个包会以广播的方式在发送端所处的自网内传输，所有主机接收后拆开包，发现目标ip为自己的，就响应，返回自己的mac</p><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>传输层的由来：<strong>网络层的ip帮我们区分子网</strong>，<strong>以太网层的mac帮我们找到主机</strong>，然后大家使用的都是应用程序，你的电脑上可能同时开启qq，暴风影音，等多个应用程序，</p><p>那么我们通过ip和mac找到了一台特定的主机，如何标识这台主机上的应用程序，答案就是<strong>端口</strong>，端口即<strong>应用程序与网卡关联的编号</strong>。</p><p>传输层功能：<strong>建立端口到端口的通信</strong></p><div class="note info flat"><p>补充：端口范围0-65535，0-1023为系统占用端口</p></div><ul><li>tcp协议：<br>可靠传输，TCP数据包没有长度限制，理论上可以无限长，但是为了保证网络的效率，通常TCP数据包的长度不会超过IP数据包的长度，以确保单个TCP数据包不必再分割。</li></ul><table><thead><tr><th>以太网头</th><th>ip 头</th><th>tcp头</th><th>数据</th></tr></thead></table><ul><li>udp协议：<br>不可靠传输，”报头”部分一共只有8个字节，总长度不超过65,535字节，正好放进一个IP数据包。</li></ul><table><thead><tr><th>以太网头</th><th>ip头</th><th>udp头</th><th>数据</th></tr></thead></table><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>应用层由来：用户使用的都是应用程序，均工作于应用层，互联网是开发的，大家都可以开发自己的应用程序，数据多种多样，必须规定好数据的组织形式</p><p>应用层功能：<strong>规定应用程序的数据格式</strong>。</p><div class="note info flat"><p>例：TCP协议可以为各种各样的程序传递数据，比如Email、WWW、FTP等等。那么，必须有不同协议规定电子邮件、网页、FTP数据的格式，这些应用程序协议就构成了”应用层”。</p></div><h3 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h3><p>我们知道两个进程如果需要进行通讯最基本的一个前提<code>能够唯一的标示一个进程</code>，在本地进程通讯中我们可以使用<code>PID</code>来唯一标示一个进程，但PID<strong>只在本地唯一</strong>，网络中的两个进程PID冲突几率很大，这时候我们需要另辟它径了，我们知道IP层的<code>ip地址</code>可以唯一标示主机，而TCP层协议和端口号可以唯一标示主机的一个进程，这样我们可以利用<code>ip地址＋协议＋端口号</code>唯一标示网络中的一个进程。</p><p>能够唯一标示网络中的进程后，它们就可以利用socket进行通信了，什么是socket呢？我们经常把socket翻译为套接字，socket是在应用层和传输层之间的一个抽象层，它把TCP&#x2F;IP层复杂的操作抽象为几个简单的接口供应用层调用已实现进程在网络中通信。</p><p>socket起源于UNIX，在Unix一切皆文件哲学的思想下，socket是一种”打开—读&#x2F;写—关闭”模式的实现，服务器和客户端各自维护一个”文件”，在建立连接打开后，可以向自己文件写入内容供对方读取或者读取对方内容，通讯结束时关闭文件。</p><h1 id="网络通信实现"><a href="#网络通信实现" class="headerlink" title="网络通信实现"></a>网络通信实现</h1><p>想实现网络通信，每台主机需具备四要素</p><ul><li>本机的IP地址</li><li>子网掩码</li><li>网关的IP地址</li><li>DNS的IP地址</li></ul><p>获取这四要素分两种方式</p><ol><li>静态获取<br>即手动配置</li><li>动态获取<br>通过dhcp获取</li></ol><table><thead><tr><th>以太网头</th><th>IP头</th><th>UDP头</th><th>DHCP数据包</th></tr></thead></table><p>（1）最前面的”<code>以太网标头</code>”，设置发出方（本机）的<code>MAC地址</code>和接收方（<code>DHCP服务器</code>）的<code>MAC地址</code>。前者就是本机网卡的MAC地址，后者这时不知道，就填入一个<code>广播地址：FF-FF-FF-FF-FF-FF</code>。<br>（2）后面的”<code>IP标头</code>”，设置<code>发出方的IP地址</code>和<code>接收方的IP地址</code>。这时，对于这两者，本机都不知道。于是，<code>发出方的IP地址</code>就设为<code>0.0.0.0</code>，<code>接收方的IP地址</code>设为<code>255.255.255.255</code>。<br>（3）最后的”<code>UDP标头</code>”，设置发出方的端口和接收方的端口。这一部分是<code>DHCP协议</code>规定好的，发出方是<code>68端口</code>，接收方是<code>67端口</code>。</p><p>这个数据包构造完成后，就可以发出了。以太网是<strong>广播发送</strong>，同一个子网络的每台计算机都收到了这个包。因为接收方的MAC地址是<code>FF-FF-FF-FF-FF-FF</code>，看不出是发给谁的，所以每台收到这个包的计算机，还必须分析这个包的IP地址，才能确定是不是发给自己的。当看到发出方IP地址是<code>0.0.0.0</code>，接收方是<code>255.255.255.255</code>，于是DHCP服务器知道”这个包是发给我的”，而其他计算机就可以丢弃这个包。</p><p>接下来，DHCP服务器读出这个包的数据内容，分配好IP地址，发送回去一个”<code>DHCP响应</code>”数据包。这个响应包的结构也是类似的，<code>以太网标头</code>的MAC地址是双方的网卡地址，<code>IP标头</code>的IP地址是DHCP服务器的IP地址（发出方）和255.255.255.255（接收方），UDP标头的端口是67（发出方）和68（接收方），分配给请求端的IP地址和本网络的具体参数则包含在Data部分。</p><p>新加入的计算机收到这个<strong>响应包</strong>，于是就知道了自己的IP地址、子网掩码、网关地址、DNS服务器等等参数</p><h1 id="DNS域名解析"><a href="#DNS域名解析" class="headerlink" title="DNS域名解析"></a>DNS域名解析</h1><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>DNS的作用：在互联网中，其实没有类似于<code>www.xxx.com</code>这种域名方式，而替代的是以IP地址，如<code>222.222.222.222</code>，那我们在IE地址栏中应当输入<code>222.222.222.222</code>才能打开网站<code>www.xxx.com</code>，但我们细想一下，互联网上的网站成千上万，如果每个网站登陆都需要记住一大串数字，那是不是特别不方便，对于记忆力不强的人，根本无法记住这么烦琐的数字。这个时候DNS就出现了，它的作用就是将<code>222.222.222.222</code><strong>解析</strong>为<code>www.xxx.com</code>，那么我们登陆的时候就直接输入域名就可以了。</p><p>为什么一定要设置DNS才能上网？有些朋友可能会发现，为什么我可能登陆QQ、MSN，但却打不开网页呢？其实大部分原因都是因为DNS服务器故障造成的，DNS服务器地址是唯一的，是运营商提供给终端用户用来解析IP地址及域名的关系，而如果不设定DNS服务器地址，那么就无法查询地址的去向，自然也就打不开网页，而QQ、MSN等即时聊天软件，采用的是<code>UDP传输协议</code>，即不可靠传输协议，无需提供DNS服务器地址，也同样可以登陆。</p><h2 id="dns的两种查询方式"><a href="#dns的两种查询方式" class="headerlink" title="dns的两种查询方式"></a>dns的两种查询方式</h2><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>主机向本地域名服务器的查询一般都是采用<strong>递归查询</strong>。所谓递归查询就是：如果主机所询问的本地域名服务器不知道被查询的域名的IP地址，那么本地域名服务器就以DNS客户的身份，向其它根域名服务器继续发出查询请求报文(即替主机继续查询)，而不是让主机自己进行下一步查询。</p><p>因此，递归查询返回的查询结果或者是所要查询的IP地址，或者是报错，表示无法查询到所需的IP地址。</p><h3 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h3><p>本地域名服务器向根域名服务器的查询的迭代查询。迭代查询的特点：当根域名服务器收到本地域名服务器发出的迭代查询请求报文时，要么给出所要查询的IP地址，<br>要么告诉本地服务器：“你下一步应当向哪一个域名服务器进行查询”。然后让本地服务器进行后续的查询。根域名服务器通常是把自己知道的顶级域名服务器的IP地址告诉本地域名服务器，<br>让本地域名服务器再向顶级域名服务器查询。顶级域名服务器在收到本地域名服务器的查询请求后，要么给出所要查询的IP地址，要么告诉本地服务器下一步应当向哪一个权限域名服务器进行查询。<br>最后，知道了所要解析的IP地址或报错，然后把这个结果返回给发起查询的主机。</p><p><img src="http://image.xiaoyaomeow.cn:40027/i/202301131826638.webp" alt="202301131826638.webp"><br><img src="http://image.xiaoyaomeow.cn:40027/i/202301131826741.webp" alt="202301131826741.webp"></p><div class="note primary flat"><p>下面举一个例子演示整个查询过程：</p></div><p>假定域名为m.xyz.com的主机想知道另一个主机y.abc.com的IP地址。例如，<a href="http://主机m.xyz.com打算发送邮件给y.abc.com/">主机m.xyz.com打算发送邮件给y.abc.com</a>。这时就必须知道主机y.abc.com的IP地址。下面是图2的几个查询步骤：</p><ol><li>主机<code>m.abc.com</code>先向本地服务器<code>dns.xyz.com</code>进行递归查询。</li><li>本地服务器采用<strong>迭代查询</strong>。它先向一个根域名服务器查询。</li><li>根域名服务器告诉本地服务器，下一次应查询的顶级域名服务器<code>dns.com</code>的IP地址。</li><li>本地域名服务器向顶级域名服务器<code>dns.com</code>进行查询。</li><li>顶级域名服务器<code>dns.com</code>告诉本地域名服务器，下一步应查询的权限服务器<code>dns.abc.com</code>的IP地址。</li><li>本地域名服务器向权限域名服务器<code>dns.abc.com</code>进行查询。</li><li>权限域名服务器<code>dns.abc.com</code>告诉本地域名服务器，所查询的主机的IP地址。</li><li>本地域名服务器最后把查询结果告诉<code>m.xyz.com</code>。</li></ol><div class="note info flat"><p>整个查询过程共用到了8个UDP报文。</p></div><p>为了提高DNS查询效率，并减轻服务器的负荷和减少因特网上的DNS查询报文数量，在域名服务器中广泛使用了高速缓存，用来存放最近查询过的域名以及从何处获得域名映射信息的记录。</p><p>例如，在上面的查询过程中，如果在m.xyz.com的主机上不久前已经有用户查询过y.abc.com的IP地址，那么本地域名服务器就不必向根域名服务器重新查询y.abc.com的IP地址，而是直接把告诉缓存中存放的上次查询结果(即y.abc.com的IP地址)告诉用户。</p><p>由于名字到地址的绑定并不经常改变，为保持告诉缓存中的内容正确，域名服务器应为每项内容设置计时器并处理超过合理时间的项(例如每个项目两天)。当域名服务器已从缓存中删去某项信息后又被请求查询该项信息，就必须重新到授权管理该项的域名服务器绑定信息。当权限服务器回答一个查询请求时，在响应中都指明绑定有效存在的时间值。增加此时间值可减少网络开销，而减少此时间值可提高域名解析的正确性。</p><p>不仅在本地域名服务器中需要高速缓存，在主机中也需要。许多主机在启动时从本地服务器下载名字和地址的全部数据库，维护存放自己最近使用的域名的高速缓存，并且只在从缓存中找不到名字时才使用域名服务器。维护本地域名服务器数据库的主机应当定期地检查域名服务器以获取新的映射信息，而且主机必须从缓存中删除无效的项。由于域名改动并不频繁，大多数网点不需花精力就能维护数据库的一致性。</p><p><img src="http://image.xiaoyaomeow.cn:40027/i/202301132350090.webp" alt="202301132350090.webp"></p><h2 id="DNS解析流程举例"><a href="#DNS解析流程举例" class="headerlink" title="DNS解析流程举例"></a>DNS解析流程举例</h2><p>如上图所示，我们将详细阐述DNS解析流程。</p><ol><li>首先客户端位置是一台电脑或手机，在打开浏览器以后，比如输入<code>http://www.zdns.cn</code>的域名，它首先是由浏览器发起一个DNS解析请求，如果本地缓存服务器中找不到结果，则首先会向<code>根服务器</code>查询，根服务器里面记录的都是各个顶级域所在的服务器的位置，当向根请求<code>http://www.zdns.cn</code>的时候，根服务器就会返回<code>.cn服务器</code>的位置信息。</li><li><code>递归服务器</code>拿到.cn的权威服务器地址以后，就会寻问cn的<code>权威服务器</code>，知不知道<code>http://www.zdns.cn</code>的位置。这个时候cn权威服务器查找并返回<code>http://zdns.cn</code>服务器的地址。</li><li>继续向<code>http://zdns.cn</code>的权威服务器去查询这个地址，由<code>http://zdns.cn</code>的服务器给出了地址：202.173.11.10</li><li>最终才能进行http的链接，顺利访问网站。</li><li>这里补充说明，一旦递归服务器拿到解析记录以后，就会在本地进行缓存，如果下次客户端再请求本地的递归域名服务器相同域名的时候，就不会再这样一层一层查了，因为本地服务器里面已经有缓存了，这个时候就直接把<a href="http://www.zdns.cn的a记录返回给客户端就可以了./">http://www.zdns.cn的A记录返回给客户端就可以了。</a></li></ol><div class="note info flat"><p>DNS的查询类型有20种，比较常用的查询类型有有A,NS,CNAME,PTR，MX等五种类型。以下分别介绍五种类型：</p></div><ul><li>A:由DNS域名到IP地址的查询，即正向查询，编程中由函数gethostbyname实现。</li><li>PTR：由IP到域名的查询，即逆向查询，编程中由函数gethostbyaddr。</li><li>NS:查询解析的名字服务器（Name server）。</li><li>CNAME：查询DNS的别名。</li><li>MX:邮箱服务器查询。</li></ul><div class="note info flat"><p>DNS资源记录</p></div><p>记录一条<strong>域名信息映射关系</strong>，称之为<code>资源记录（RR）</code>。<br>当我们查询域名<code>http://www.zdns.cn</code>的时候，查询结果得到的资源记录结构体中有如下数据：</p><ol><li>TTL，就是生存周期，是递归服务器会在缓存中保存该资源记录的时长。</li><li>网络&#x2F;协议类型，它的代表的标识是IN，IN就是internet，目前DNS系统主要支持的协议是IN。</li><li>type，就是资源记录类型，一般的网站都是都是A记录（IPv4的主机地址）。</li><li>rdata是资源记录数据，就是域名关联的信息数据。</li></ol><h2 id="DNS缓存"><a href="#DNS缓存" class="headerlink" title="DNS缓存"></a>DNS缓存</h2><p>DNS缓存指DNS返回了正确的IP之后，系统就会将这个结果临时储存起来。并且它会为缓存设定一个失效时间 (例如N小时)，在这N小时之内，当你再次访问这个网站时，系统就会直接从你电脑本地的DNS缓存中把结果交还给你，而不必再去询问DNS服务器，变相“加速”了网址的解析。</p><p>当然，在超过N小时之后，系统会自动再次去询问DNS服务器获得新的结果。所以，当你修改了 DNS 服务器，并且不希望电脑继续使用之前的DNS缓存时，就需要手动去清除本地的缓存了。</p><h2 id="DNS缓存分类"><a href="#DNS缓存分类" class="headerlink" title="DNS缓存分类"></a>DNS缓存分类</h2><ol><li>浏览器DNS缓存（内存中): 浏览器会按照一定频率缓存DNS记录</li><li>本地操作系统DNS缓存(内存中): 如果浏览器缓存中找不到需要的DNS记录，那就去操作系统找。</li><li>本地HOSTS文件（硬盘中）: Windows系统中位于C:\Windows\System32\drivers\etc</li><li>路由器指定的DNS(远程): 路由器自动获取DNS地址，也可以手动修改-登录后台设置DNS服务器地址</li></ol><div class="note warning flat"><p>ps：路由器DNS被篡改会造成域名劫持，你访问的网址都会被定位到同一个位置，但是IP直接可以访问</p></div><ol start="5"><li>ISP的DNS服务器（远程）: <code>ISP(Internet Service Provider</code>互联网服务提供商如联通电信移动)，ISP有专门的DNS服务器应 对DNS查询请求</li><li>根服务器（远程，跨国）: ISP的DNS服务器还找不到的话，它就会向根服务器发出查询请求</li></ol><p>调用系统缓存需要跨进程，消耗大，因此为了解析速度的方便，就有了一系列缓存来加快IP查找速度。</p><h2 id="浏览器DNS查找顺序"><a href="#浏览器DNS查找顺序" class="headerlink" title="浏览器DNS查找顺序"></a>浏览器DNS查找顺序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器DNS缓存-&gt;本地系统DNS缓存-&gt;本地计算机HOSTS文件-&gt;ISP DNS缓存-&gt;递归or迭代搜索</span><br></pre></td></tr></table></figure><p>期间如果查询到了，也就直接访问ip地址了，这个就像三级缓存原理一样，例如，能够在hosts文件中找到就不会再去查其他的</p><h2 id="清除DNS缓存"><a href="#清除DNS缓存" class="headerlink" title="清除DNS缓存"></a>清除DNS缓存</h2><p>打开cmd执行命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /all</span><br></pre></td></tr></table></figure><div class="note primary flat"><p>全国通用DNS地址（国内用户推荐使用，速度较快！）</p></div><p>首先DNS服务器地址添：<code>114.114.114.114</code><br>备用DNS服务器地址添：<code>114.114.115.115</code></p><div class="note primary flat"><p>全球通用DNS地址（此DNS地址为谷歌服务器的）</p></div><p>首选DNS服务器地址添：<code>8.8.8.8</code><br>备用DNS服务器地址添：<code>8.8.4.4</code></p><p>查看本地dns缓存命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /displaydns</span><br></pre></td></tr></table></figure><p>清除本地dns缓存命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /flushdns</span><br></pre></td></tr></table></figure><h2 id="清除浏览器缓存"><a href="#清除浏览器缓存" class="headerlink" title="清除浏览器缓存"></a>清除浏览器缓存</h2><p>我们在开发的时候，有时候会给某个域名绑hosts，用于本地开发测试，但是绑了之后，用谷歌浏览器访问会发现并没有生效，按F12会发现访问的还是线上的ip，说明浏览器是有该域名的dns缓存的，那么如何清除浏览器的dns缓存呢？</p><ol><li>针对谷歌浏览器<br>谷歌浏览器清除方法如下：打开浏览器，访问如下地址<br><code>chrome://net-internals/#dns</code><br>点击 <code>clear host cache</code>，就清楚了浏览器的dns缓存，再访问绑hosts的域名，就会发现ip变啦</li><li>针对火狐浏览器<br>如果是firefox火狐浏览器的话，可以按照以下方式：<br>在地址栏中 <code>about:config</code> 并回车，可能会出现一个警告信息，直接点击按钮进入，会出现firefox的所有配置信息，通过搜索dns 进行过滤，可以看到一项名为 <code>network.dnsCacheExpirationGracePeriod</code> 项，它对应的值就是DNS缓存的时间，双击此项，会出现修改的提示框，填入 <code>0</code> （不缓存DNS）即可。</li></ol><h3 id="域名定义"><a href="#域名定义" class="headerlink" title="域名定义"></a>域名定义</h3><div class="note info no-icon flat"><p><a href="http://jingyan.baidu.com/article/1974b289a649daf4b1f774cb.html">http://jingyan.baidu.com/article/1974b289a649daf4b1f774cb.html</a></p></div><p>顶级域名：以<code>.com</code>,<code>.net</code>,<code>.org</code>,<code>.cn</code>等等属于<strong>国际顶级域名</strong>，根据目前的国际互联网域名体系，国际顶级域名分为两类：<code>类别顶级域名(gTLD)</code>和<code>地理顶级域名(ccTLD)</code>两种。</p><ul><li>类别顶级域名是以”<code>COM</code>“、“<code>NET</code>”、“<code>ORG</code>”、“<code>BIZ</code>”、”<code>INFO</code>“等结尾的域名，均由国外公司负责管理。</li><li>地理顶级域名是以国家或地区代码为结尾的域名，如”CN”代表中国，”UK”代表英国。地理顶级域名一般由各个国家或地区负责管理。</li></ul><p>二级域名：二级域名是以顶级域名为基础的地理域名，比喻中国的二级域有，<code>.com.cn</code>,<code>.net.cn</code>,<code>.org.cn</code>,<code>.gd.cn</code>等.子域名是其父域名的子域名，比喻父域名是<code>abc.com</code>,子域名就是<code>www.abc.com</code>或者<code>*.abc.com</code>.</p><p>一般来说，二级域名是域名的一条记录，比如<code>alidiedie.com</code>是一个域名，<code>www.alidiedie.com</code>是其中比较常用的记录，一般默认是用这个，但是类似<code>*.alidiedie.com</code>的域名全部称作是<code>alidiedie.com</code>的二级</p><h1 id="网络通信流程"><a href="#网络通信流程" class="headerlink" title="网络通信流程"></a>网络通信流程</h1><ol><li>本机获取</li></ol><div class="note info flat"><p>本机的IP地址：<code>192.168.1.100</code><br>子网掩码：<code>255.255.255.0</code><br>网关的IP地址：<code>192.168.1.1</code><br>DNS的IP地址：<code>8.8.8.8</code></p></div><ol start="2"><li>打开浏览器，想要访问Google，在地址栏输入了网址：<a href="http://www.google.com/">www.google.com</a>。</li><li>dns协议(基于udp协议)</li><li>HTTP部分的内容，类似于下面这样：</li></ol><div class="note info flat"><p>GET &#x2F; HTTP&#x2F;1.1<br>Host: <a href="http://www.google.com/">www.google.com</a><br>Connection: keep-alive<br>User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.1) ……<br>Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,<em>&#x2F;</em>;q&#x3D;0.8<br>Accept-Encoding: gzip,deflate,sdch<br>Accept-Language: zh-CN,zh;q&#x3D;0.8<br>Accept-Charset: GBK,utf-8;q&#x3D;0.7,*;q&#x3D;0.3<br>Cookie: … …</p></div><p>我们假定这个部分的长度为4960字节，它会被嵌在TCP数据包之中。</p><ol start="5"><li>TCP协议<br>TCP数据包需要设置端口，接收方（Google）的HTTP端口默认是80，发送方（本机）的端口是一个随机生成的1024-65535之间的整数，假定为51775。</li></ol><p>TCP数据包的标头长度为20字节，加上嵌入HTTP的数据包，总长度变为4980字节。</p><ol start="6"><li>IP协议<br>然后，TCP数据包再嵌入IP数据包。IP数据包需要设置双方的IP地址，这是已知的，发送方是192.168.1.100（本机），接收方是172.194.72.105（Google）。</li></ol><p>IP数据包的标头长度为20字节，加上嵌入的TCP数据包，总长度变为5000字节。</p><ol start="7"><li>以太网协议<br>最后，IP数据包嵌入以太网数据包。以太网数据包需要设置双方的MAC地址，发送方为本机的网卡MAC地址，接收方为网关192.168.1.1的MAC地址（通过ARP协议得到）。</li></ol><p>以太网数据包的数据部分，最大长度为1500字节，而现在的IP数据包长度为5000字节。因此，IP数据包必须分割成四个包。因为每个包都有自己的IP标头（20字节），所以四个包的IP数据包的长度分别为1500、1500、1500、560。</p><ol start="8"><li>服务器端响应<br>经过多个网关的转发，Google的服务器172.194.72.105，收到了这四个以太网数据包。</li></ol><p>根据IP标头的序号，Google将四个包拼起来，取出完整的TCP数据包，然后读出里面的”HTTP请求”，接着做出”HTTP响应”，再用TCP协议发回来。</p><p>本机收到HTTP响应以后，就可以将网页显示出来，完成一次网络通信。</p><h1 id="网络设备及架构"><a href="#网络设备及架构" class="headerlink" title="网络设备及架构"></a>网络设备及架构</h1><p><img src="http://image.xiaoyaomeow.cn:40027/i/202301141432849.png" alt="202301141432849.png"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下搭建Teamspeak服务器</title>
      <link href="/2024/06/07/Linux%E4%B8%8B%E6%90%AD%E5%BB%BATeamspeak%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2024/06/07/Linux%E4%B8%8B%E6%90%AD%E5%BB%BATeamspeak%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="所需要的端口"><a href="#所需要的端口" class="headerlink" title="所需要的端口"></a>所需要的端口</h1><table><thead><tr><th align="center">服务</th><th align="center">协议</th><th align="center">端口</th><th align="center">必要</th></tr></thead><tbody><tr><td align="center">语音服务</td><td align="center">UDP</td><td align="center">9987</td><td align="center">是</td></tr><tr><td align="center">文件传输</td><td align="center">TCP</td><td align="center">30033</td><td align="center">是</td></tr><tr><td align="center">服务器查询</td><td align="center">TCP</td><td align="center">10011</td><td align="center">可选</td></tr><tr><td align="center">服务器查询</td><td align="center">TCP</td><td align="center">10022</td><td align="center">可选</td></tr><tr><td align="center">网络查询</td><td align="center">TCP</td><td align="center">10080</td><td align="center">可选</td></tr><tr><td align="center">网络查询</td><td align="center">TCP</td><td align="center">10443</td><td align="center">可选</td></tr><tr><td align="center">TSDNS</td><td align="center">TCP</td><td align="center">41144</td><td align="center">可选</td></tr></tbody></table><h1 id="同意许可条款"><a href="#同意许可条款" class="headerlink" title="同意许可条款"></a>同意许可条款</h1><blockquote><p>在teamspeak服务器目录创建许可条款</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .ts3server_license_accepted</span><br></pre></td></tr></table></figure><h1 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ts3server_startscript.sh start</span><br></pre></td></tr></table></figure><h1 id="token"><a href="#token" class="headerlink" title="token"></a>token</h1><blockquote><p>启动后会出现管理员查询账号以及token，注意保存以备使用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建了服务器查询管理帐户</span><br><span class="line">loginname= &quot;******&quot;, password= &quot;******&quot;</span><br><span class="line">apikey= &quot;******&quot;</span><br><span class="line"></span><br><span class="line">已创建服务器管理员权限密钥，请使用该密钥获取</span><br><span class="line">您的虚拟服务器的服务器管理员权限。</span><br><span class="line">还可查看 doc/privilegekey_guide.txt 了解详情。</span><br><span class="line"></span><br><span class="line">token=****** </span><br></pre></td></tr></table></figure><h1 id="设置自启动"><a href="#设置自启动" class="headerlink" title="设置自启动"></a>设置自启动</h1><blockquote><p>创建并编辑文件，下面路径改成自己的文件夹路径</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/teamspeak.service</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Teamspeak Service</span><br><span class="line">Wants=network-online.target</span><br><span class="line">After=syslog.target network.target network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">WorkingDirectory=/usr/local/teamspeak3-server</span><br><span class="line">ExecStart=/usr/local/teamspeak3-server/ts3server_startscript.sh start</span><br><span class="line">ExecStop=/usr/local/teamspeak3-server/ts3server_startscript.sh stop</span><br><span class="line">PIDFile=/usr/local/teamspeak3-server/ts3server.pid</span><br><span class="line">Type=forking</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ul><li><p>重新加载 systemd：systemctl daemon-reload</p></li><li><p>开启自启动：systemctl enable teamspeak.service</p></li><li><p>启动 TeamSpeak：systemctl start teamspeak.service</p></li><li><p>停止 TeamSpeak：systemctl stop teamspeak.service</p></li><li><p>重启 TeamSpeak：systemctl restart teamspeak.service</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> teamspeak </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下部署Teamspeak服务器的音乐机器人</title>
      <link href="/2024/06/07/Linux%E4%B8%8B%E9%83%A8%E7%BD%B2Teamspeak%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%9F%B3%E4%B9%90%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
      <url>/2024/06/07/Linux%E4%B8%8B%E9%83%A8%E7%BD%B2Teamspeak%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%9F%B3%E4%B9%90%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux下部署Teamspeak服务器的音乐机器人"><a href="#Linux下部署Teamspeak服务器的音乐机器人" class="headerlink" title="Linux下部署Teamspeak服务器的音乐机器人"></a>Linux下部署Teamspeak服务器的音乐机器人</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>Linux_x64：<a href="https://splamy.de/api/nightly/projects/ts3ab/master_linux_x64/download">https://splamy.de/api/nightly/projects/ts3ab/master_linux_x64/download</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>依赖</strong></p><p>Ubuntu&#x2F;Debian：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libopus-dev ffmpeg</span><br></pre></td></tr></table></figure><p>Arch Linux：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S opus ffmpeg</span><br></pre></td></tr></table></figure><p>CentOS 7：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install epel-release</span><br><span class="line">sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm</span><br><span class="line">sudo yum -y install ffmpeg opus-devel</span><br></pre></td></tr></table></figure><p>安装完依赖后解压下载的TS3AudioBot.tar.gz</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf TS3AudioBot.tar.gz</span><br></pre></td></tr></table></figure><p>ps：遇到ffmpeg安装出现问题缺少包可选择更改软件源解决比如使用Negativo17软件源，笔者使用腾讯云的OpenCloudOS系统源仓库就并不包含FFmpeg。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install epel-release</span><br><span class="line">sudo yum config-manager --set-enabled PowerTools</span><br><span class="line">sudo yum-config-manager --add-repo=https://negativo17.org/repos/epel-multimedia.repo</span><br></pre></td></tr></table></figure><p>启动后就可以继续尝试安装FFmpeg：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install ffmpeg</span><br></pre></td></tr></table></figure><p>开放防火墙端口58913—Web控制台端口</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p><strong>第一次运行TS3AudioBot</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./TS3AudioBot</span><br></pre></td></tr></table></figure><p>后续使用nohup指令可一直挂在后台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./TS3AudioBot</span><br></pre></td></tr></table></figure><hr><p>启动后会先出现可以不用管</p><p>Do you want to set up an admin in the default permission file template?</p><p>下一步就是填写服务器IP等</p><p>再下一步就是服务器密码有就输入没有就不填</p><hr><p>这时候初始的“default”Bot就创建好了，出现了几个新文件夹：</p><ul><li><strong>bots</strong>（后面添加的所有Bot都会存储在这个文件夹中，默认会有个叫default的文件夹）</li><li><strong>WebInterface</strong>（项目自带的Dashboard面板文件文件夹，简直良心）</li><li><strong>ts3audiobot.db</strong>（bot的数据库）</li><li><strong>ts3audiobot.toml</strong>（bot的，相关的，全局指令设置）</li><li><strong>rights.toml</strong>（用户权限参数设置）</li></ul><p>我们需要先更改 rights.toml 文件</p><p>useruid &#x3D; [ “AJRVfNqb&#x2F;GfkCvkQ0K&#x2F;OWckx0K0&#x3D;” ]</p><p>在后面添加自己的teamspeak用户UID。</p><p><strong>执行完后前面连接正确的话就会有一个“TS3AudioBot”进入你的频道，名字可以在web面板更改</strong></p><p>此时私聊这个Bot，输入：</p><p>!api token</p><p>Bot即可回复你一串代码，例如：</p><p>AJRVfNqb&#x2F;GfkCvkQ0K&#x2F;OWckx0K0&#x3D;:fgaX4zgcfNI36TLYu4c15ldTR5ZnRvJs</p><p>ps：出错的话记得检查前面的管理员规则</p><h2 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h2><p>新建ts3audiobot.service</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/ts3audiobot.service</span><br></pre></td></tr></table></figure><p>输入以下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=TS3AudioBot</span><br><span class="line">After=teamspeak.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/home/teamspeak/</span><br><span class="line">ExecStart=/home/teamspeak/TS3AudioBot</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=15</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ul><li>更新配置：systemctl daemon-reload</li><li>开机启动：systemctl enable ts3audiobot.service</li><li>启动服务：systemctl start ts3audiobot.service</li><li>停止服务：systemctl stop ts3audiobot.service</li><li>重启服务：systemctl restart ts3audiobot.service</li><li>查看状态：systemctl status ts3audiobot.service</li></ul><h2 id="Web控制台"><a href="#Web控制台" class="headerlink" title="Web控制台"></a>Web控制台</h2><p>拿到权限代码后就可以打开Web控制台在下面输入token登录了。</p><p><a href="https://imgse.com/i/pktejw4"><img src="https://s21.ax1x.com/2024/06/07/pktejw4.png" alt="pktejw4.png"></a></p><p>下方的3个板块只有第二个用到进入到bot的管理界面，可以创建新bot和管理服务器内的界面，相当于网页化图形菜单不用输入指令。</p><p><a href="https://imgse.com/i/pktmNhn"><img src="https://s21.ax1x.com/2024/06/07/pktmNhn.png" alt="pktmNhn.png"></a></p><p>可以创建不同的歌单，右边添加音乐播放</p><p>播放本地音乐需要输入文件目录：&#x2F;home&#x2F;teamspeak&#x2F;music&#x2F;周杰伦-可爱女人.flac 类似这种形式。</p>]]></content>
      
      
      <categories>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> teamspeak </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年终回顾</title>
      <link href="/2024/01/01/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
      <url>/2024/01/01/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="NS年终总结"><a href="#NS年终总结" class="headerlink" title="NS年终总结"></a>NS年终总结</h1><p>ns依旧是在吃灰的边缘徘徊着，还是更适合周边线下朋友一起乐趣更高，躺着了与其ns感觉刷手机app资讯更能满足我的所需<br><img src="https://s11.ax1x.com/2024/01/01/piX16G4.jpg" alt="piX16G4.jpg"><br><img src="https://s11.ax1x.com/2024/01/01/piX1yiF.jpg" alt="piX1yiF.jpg"><br><img src="https://s11.ax1x.com/2024/01/01/piX1rIU.jpg" alt="piX1rIU.jpg"></p><h1 id="Steam年终总结"><a href="#Steam年终总结" class="headerlink" title="Steam年终总结"></a>Steam年终总结</h1><p>好玩的游戏永远是存在于愿望单中，而出了的游戏往往都是买了吃灰，远远期望着愿望单中那个迟迟代发售的游戏，缺的永远不是玩的游戏而是player，而今年一堆褒姒游戏对于我来说星空可是当之无愧啊！！！！也请今年继续努力！<br><a href="https://s.team/y23/mrptwcv?l=schinese"><img src="https://s21.ax1x.com/2024/12/25/pAjXLTO.png" alt="2023"></a></p><h1 id="QQ音乐"><a href="#QQ音乐" class="headerlink" title="QQ音乐"></a>QQ音乐</h1><p>QQ音乐如同往昔依旧是成为了周杰伦的启动器，周董年底圣诞也算是献上了一份圣诞礼物有一首新的单曲，不论评价如何但始终如一。<br><img src="https://s11.ax1x.com/2024/01/01/piX1DaT.jpg" alt="piX1DaT.jpg"></p><h1 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a>网易云音乐</h1><p>QQ音乐是周董启动器那网易云就是林俊杰启动器没毛病，不过用了那么久已经习惯了，还是网易云更舒服一点，听不了的也都上传云盘上了:d<br><img src="https://s11.ax1x.com/2024/01/01/piX1Ws1.jpg" alt="piX1Ws1.jpg"><br><img src="https://s11.ax1x.com/2024/01/01/piX1fqx.png" alt="piX1fqx.png"></p>]]></content>
      
      
      <categories>
          
          <category> 年度总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2023/11/07/Markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/11/07/Markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>标题</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 这是 <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span> 一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 这是 <span class="language-xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span></span> 二级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 这是 <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span></span> 三级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 这是 <span class="language-xml"><span class="tag">&lt;<span class="name">h4</span>&gt;</span></span> 四级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">##### 这是 <span class="language-xml"><span class="tag">&lt;<span class="name">h5</span>&gt;</span></span> 五级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">###### 这是 <span class="language-xml"><span class="tag">&lt;<span class="name">h6</span>&gt;</span></span> 六级标题</span></span><br></pre></td></tr></table></figure><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*这个是 斜体 的文字*</span></span><br><span class="line"><span class="emphasis">_这也是 斜体 的文字_</span></span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><p><em>这个是 斜体 的文字</em></p><p><em>这也是 斜体 的文字</em></p><h2 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这个是 粗体 的文字**</span></span><br><span class="line"><span class="strong">__这也是 粗体 的文字__</span></span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><p><strong>这个是 粗体 的文字</strong></p><p><strong>这也是 粗体 的文字</strong></p><h2 id="划去文本"><a href="#划去文本" class="headerlink" title="划去文本"></a>划去文本</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~这个文字将会被横线删除~~</span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><p><del>这个文字将会被横线删除</del></p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>带下划线文本<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><p><u>带下划线文本</u></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><strong>无序列表</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>除了这种方式还可以用<code>+</code>和<code>-</code></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 方法1</span><br><span class="line"><span class="bullet">+</span> 方法2</span><br><span class="line"><span class="bullet">-</span> 方法3</span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><ul><li>方法1</li><li>方法2</li><li>方法3</li></ul><p><strong>有序列表</strong></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>虽然看起来好像没什么变化，但这个并不是普通的文本，而是经过markdown排布的</p><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一个区块</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 这是一个大区块</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; 若要在区块里换行</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; 行之间要用`&gt;`联系起来</span></span><br></pre></td></tr></table></figure><blockquote><p>这是一个区块</p></blockquote><p><strong>区块换行</strong>：</p><blockquote><p>这是一个大区块</p><p>若要在区块里换行</p><p>行之间要用用<code>&gt;</code>联系起来</p></blockquote><p><strong>区块嵌套</strong>：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 最外层</span></span><br><span class="line"><span class="quote">&gt; &gt; 第一层嵌套</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 第二层嵌套</span></span><br></pre></td></tr></table></figure><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">logo</span>](<span class="link">/img/logo.png</span>)</span><br></pre></td></tr></table></figure><p><code>[]</code>里是图片名称<code>()</code>里是图片路径</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">GitHub</span>](<span class="link">https://github.com</span>)</span><br></pre></td></tr></table></figure><p><code>[]</code>里是链接文本<code>()</code>里是链接</p><p><strong>演示</strong>：</p><p><a href="https://github.com/">GitHub(opens new window)</a></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>以下三种方式都可以表示分割线</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong">__<span class="emphasis">_</span></span></span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><hr><p>这就是分割线</p><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`scanf(&quot;%d&quot;, &amp;price); `</span></span><br></pre></td></tr></table></figure><p><strong>演示</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scanf(&quot;%d&quot;, &amp;price);</span><br></pre></td></tr></table></figure><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>在Markdown中，我们可以通过这样的方式使用代码块</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">这里填写代码</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>如果代码要显示高亮，可以加上代码的类型，例如语言类型为JavaScript时就填写<code>javascript</code>或者<code>js</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```js</span><br><span class="line">这里填写代码</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p><strong>显示效果：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="number">100</span><span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>我们可以在Markdown中使用LaTeX来编写公式，要在LaTeX代码前后写上<code>$$</code></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">f(x) = <span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line"><span class="keyword">\lim</span><span class="keyword">\limits</span><span class="built_in">_</span>&#123;x <span class="keyword">\to</span> 0&#125; <span class="keyword">\frac</span>&#123;a<span class="built_in">^</span>x&#125;&#123;b+c&#125;, <span class="built_in">&amp;</span> x&lt;3 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\pi</span>, <span class="built_in">&amp;</span> x=3 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\int</span><span class="built_in">_</span>a<span class="built_in">^</span>&#123;3b&#125;x<span class="built_in">_</span>&#123;ij&#125;+e<span class="built_in">^</span>2 <span class="keyword">\mathrm</span>&#123;d&#125;x,<span class="built_in">&amp;</span> x&gt;3 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;<span class="keyword">\tag</span>&#123;1.1&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h3 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h3><p>要在一行文本中添加公式时，要在LaTeX代码前后写上<code>$</code></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表达式<span class="built_in">$</span>f(x) = <span class="keyword">\log</span><span class="built_in">_</span>&#123;a&#125;&#123;b&#125;-c<span class="built_in">$</span>是一个对数函数</span><br></pre></td></tr></table></figure><h3 id="推荐编辑器"><a href="#推荐编辑器" class="headerlink" title="推荐编辑器"></a><a href="https://www.latexlive.com/home">推荐编辑器</a></h3><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>标题</th><th>标题</th><th>标题</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><p>在markdown中表格的单元间要用<code>|</code>隔开，第一行目录要用<code>| ------ |</code>和后面的表格隔开</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 标题   | 标题   | 标题   |</span><br><span class="line">| ------ | ------ | ------ |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p>在单元格中换行时可以用<code>&lt;br&gt;</code>表示换行，例如</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| 其他   | 水果   | 其他   |</span><br><span class="line">| ------ | ------ | ------ |</span><br><span class="line">| 其他 | 苹果<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span>香蕉<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span>橘子 | 其他 |</span><br></pre></td></tr></table></figure><p><strong>显示：</strong></p><table><thead><tr><th>其他</th><th>水果</th><th>其他</th></tr></thead><tbody><tr><td>其他</td><td>苹果 香蕉 橘子</td><td>其他</td></tr></tbody></table><p>除此之外还可以用<code>&lt;ul&gt;</code>和<code>&lt;li&gt;</code>标签在表格中显示列表</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| 其他   | 水果   | 其他   |</span><br><span class="line">| ------ | ------ | ------ |</span><br><span class="line">| 其他 | <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>Coffee<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>Tea<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>Milk<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span> | 其他 |</span><br></pre></td></tr></table></figure><p><strong>显示：</strong></p><table><thead><tr><th>其他</th><th>水果</th><th>其他</th></tr></thead><tbody><tr><td>其他</td><td>CoffeeTeaMilk</td><td>其他</td></tr></tbody></table><p>或者是有序号的列表</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| 其他   | 水果   | 其他   |</span><br><span class="line">| ------ | ------ | ------ |</span><br><span class="line">| 其他 | <span class="language-xml"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>Coffee<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>Tea<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>Milk<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span> | 其他 |</span><br></pre></td></tr></table></figure><p><strong>显示：</strong></p><table><thead><tr><th>其他</th><th>水果</th><th>其他</th></tr></thead><tbody><tr><td>其他</td><td>CoffeeTeaMilk</td><td>其他</td></tr></tbody></table><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注释--&gt;</span><br></pre></td></tr></table></figure><p>在Markdown中使用注释和HTML一样</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ul><li>在Markdown中还<strong>可以使用html标签</strong>，你可通过html标签来添加一些Markdown原本没有的内容，例如按钮，视频等</li><li>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用<code>\</code>转义特殊字符</li></ul><p>例如<code>*</code>在markdown中用来表示列表，如果要像文本一样的输出它就要在符号前加上<code>\</code>，就像这样<code>\*</code>，那么<code>*</code>就会像文本一样在段落中显示</p><h3 id="使用VScode编写Markdown"><a href="#使用VScode编写Markdown" class="headerlink" title="使用VScode编写Markdown"></a>使用VScode编写Markdown</h3><p><strong>插件推荐</strong></p><ul><li>Markdown All in One</li></ul><p>它能让你正确的编写markdown，自动帮你自动填写序号，并且支持快捷键功能和命令，让你编写更快捷，不仅如此，当你编写Latex公式时还会弹出选项，以免你忘记那些表示符号的代码，如果你要插入链接，你只需要选中要插入的文本然后把链接粘贴上就行他会自动帮你处理</p><p><strong>快捷键</strong></p><table><thead><tr><th>快捷键</th><th>Command</th></tr></thead><tbody><tr><td>Ctrl&#x2F;Cmd + B</td><td>切换粗体</td></tr><tr><td>Ctrl&#x2F;Cmd + I</td><td>切换斜体</td></tr><tr><td>Alt+S (on Windows)</td><td>切换删除线</td></tr><tr><td>Ctrl&#x2F;Cmd + M</td><td>切换LaTeX公式</td></tr><tr><td>Ctrl&#x2F;Cmd + Shift + F</td><td>格式化</td></tr><tr><td>Ctrl&#x2F;Cmd + K V</td><td>将预览切换到一侧</td></tr></tbody></table><p><strong>命令</strong></p><ul><li><strong>Markdown All in One: Print current document to HTML</strong></li></ul><p>将当前文档打印为 HTML</p><ul><li><strong>Markdown All in One: Print documents to HTML</strong></li></ul><p>将目录下的所有文档打印为 HTML</p><p>以上这两个命令最实用，除此之外还有其他命令，使用<strong>Ctrl + Shift + P</strong>，然后在搜索框输入插件名称就可以看到命令，不需要输入全部名称一般输入markdown就可以看到命令</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/12/hello-world/"/>
      <url>/2023/10/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
